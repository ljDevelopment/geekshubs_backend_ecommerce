{
	"info": {
		"_postman_id": "42818a7c-bf69-4689-81f6-43b845c1231a",
		"name": "ecommerce",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "users_signup_default",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d133e99-afdc-4be6-8513-e3b3c8ee9784",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"luis\",\n    \"email\" : \"luis@emil.com\",\n    \"password\" : \"mypasswrod\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "users_signup_default_admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a960ef1-5087-4e0d-9340-521e15dddf98",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"admin\",\n    \"email\" : \"admin@emil.com\",\n    \"password\" : \"mypasswrod\",\n    \"role\" : \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "users_signup_default_wrong_role",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c9578876-eb2b-4706-814e-ffc1620284b2",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"wrongrole\",\n    \"email\" : \"wrongrole@emil.com\",\n    \"password\" : \"mypasswrod\",\n    \"role\" : \"wrong\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "users_login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d133e99-afdc-4be6-8513-e3b3c8ee9784",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\" : \"luis@emil.com\",\n    \"password\" : \"mypasswrod\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "users_update_name",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"newNameRequested\"\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/update/5fad7a77f8a58d00db304d80?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmFkN2E3N2Y4YTU4ZDAwZGIzMDRkODIiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2MDUyMDQ1OTl9.QcxZ_ptn8d0f-aALhdH3Tq2J87EtQZ-mgmE7BVTRIgc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"update",
								"5fad7a77f8a58d00db304d80"
							],
							"query": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmFkN2E3N2Y4YTU4ZDAwZGIzMDRkODIiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2MDUyMDQ1OTl9.QcxZ_ptn8d0f-aALhdH3Tq2J87EtQZ-mgmE7BVTRIgc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "users_update_email",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\" : \"newEmail\"\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/update/5faa77f0378c53c4c97daaa8",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"update",
								"5faa77f0378c53c4c97daaa8"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "products",
			"item": [
				{
					"name": "product_create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a9e6837-40ef-4983-be3d-a781c536f7b5",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"product\",\n    \"category\" : \"category\",\n    \"price\" : \"1.01\",\n    \"vendor\" : \"5fabc4b0f721bd29d25c5238\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"products"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "tests",
			"item": [
				{
					"name": "tests_start",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "aeacc753-7264-470c-8c37-8db9e13b2faf",
								"exec": [
									"",
									"let isFirst = pm.info.iteration == 0;",
									"let isLast = pm.info.iteration == (pm.info.iterationCount - 1);",
									"",
									"let next = 'tests_cleanUsers';",
									"",
									"if (!isFirst) {",
									"    if (isLast){",
									"        ",
									"        next = 'tests_users_signup_wrong_role';",
									"    }",
									"    else {",
									"",
									"        switch (pm.iterationData.get('collection'))",
									"        {",
									"            case 'user':",
									"                next = 'tests_users_signup_200';",
									"            break;",
									"            case 'product':",
									"                next = 'tests_product_create';",
									"            break;",
									"        }",
									"    }",
									"    ",
									"}",
									"",
									"console.log('start -> ' + next);",
									"postman.setNextRequest(next);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7e87f4c5-7a34-433e-9563-12d91997cefb",
								"exec": [
									"pm.test(\"Start\", function() {",
									"    // TRUE",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/tests",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tests"
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_cleanUsers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "01efd38a-9eea-4416-9973-b08f9901e7c0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/tests/cleanUsers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tests",
								"cleanUsers"
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_cleanProducts",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e6c488c1-505c-4458-b21c-c00402ca3603",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/tests/cleanProducts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tests",
								"cleanProducts"
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_users_signup_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d133e99-afdc-4be6-8513-e3b3c8ee9784",
								"exec": [
									" pm.test(\"Signup ok status (200)\", function() {",
									"    pm.response.to.have.status(200);",
									" });",
									"",
									"  pm.test(\"Signup ok data\", function() {",
									"",
									"    const responseJson = pm.response.json();",
									"    ",
									"    const expectedRole = pm.iterationData.get('role') || 'user';",
									"    pm.expect(responseJson.role).to.eql(expectedRole);",
									" });",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"{{name}}\",\n    \"email\" : \"{{email}}\",\n    \"password\" : \"{{password}}\",\n    \"role\" : \"{{role}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_users_login_ok",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d133e99-afdc-4be6-8513-e3b3c8ee9784",
								"exec": [
									"pm.test(\"Users login ok status\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Users login ok data\", function() {",
									"",
									"    const responseJson = pm.response.json();",
									"    ",
									"    pm.environment.set(responseJson.role, responseJson);",
									"",
									"    pm.expect(responseJson.name).to.eql(pm.iterationData.get('name'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\" : \"{{email}}\",\n    \"password\" : \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_users_signup_412",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d133e99-afdc-4be6-8513-e3b3c8ee9784",
								"exec": [
									" pm.test(\"Signup ok (412)\", function() {",
									"    pm.response.to.have.status(412);",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"{{name}}\",\n    \"email\" : \"{{email}}\",\n    \"password\" : \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_itertion_break",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0567695-1fb4-4fa3-9998-4929c05ecf9e",
								"exec": [
									"",
									"postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000"
						}
					},
					"response": []
				},
				{
					"name": "tests_product_create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "70abdcda-9d67-4dcb-975b-76af6b44364f",
								"exec": [
									" pm.test(\"Create product ok status\", function() {",
									"    pm.response.to.have.status(200);",
									" });",
									"",
									"  pm.test(\"Create product ok data\", function() {",
									"",
									"    const responseJson = pm.response.json();",
									"",
									"    const products = pm.environment.get('products') || [];",
									"    products.push(responseJson);",
									"    pm.environment.set('products', products);",
									"",
									"    const vendor = pm.environment.get('vendor');",
									"",
									"    pm.expect(responseJson.name).to.eql(pm.iterationData.get('name'));",
									"    pm.expect(responseJson.category).to.eql(pm.iterationData.get('category'));",
									"    pm.expect(responseJson.price).to.eql(pm.iterationData.get('price'));",
									" });",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5eb3f799-ee2e-44a2-8dff-507bc5ab3973",
								"exec": [
									"const vendor = pm.environment.get('vendor');",
									"pm.variables.set('vendorId', vendor._id);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"{{name}}\",\n    \"category\" : \"{{category}}\",\n    \"price\" : \"{{price}}\",\n    \"vendor\" : \"{{vendorId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_itertion_break Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ac15465-6a21-4651-ac66-c839c092defe",
								"exec": [
									"",
									"postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000"
						}
					},
					"response": []
				},
				{
					"name": "tests_users_signup_wrong_role",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f7ad2e0-505b-4632-81f4-3cf402a9bf09",
								"exec": [
									" pm.test(\"Signup ko wrong role\", function() {",
									"    pm.response.to.have.status(400);",
									" });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"wrongrole\",\n    \"email\" : \"wrongrole@emil.com\",\n    \"password\" : \"mypasswrod\",\n    \"role\" : \"wrong\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_users_signup_noname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d133e99-afdc-4be6-8513-e3b3c8ee9784",
								"exec": [
									" pm.test(\"Signup no name\", function() {",
									"    pm.response.to.have.status(400);",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"\",\n    \"email\" : \"email@emial.com\",\n    \"password\" : \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_users_signup_noemail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d133e99-afdc-4be6-8513-e3b3c8ee9784",
								"exec": [
									" pm.test(\"Signup no emil\", function() {",
									"    pm.response.to.have.status(400);",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"name\",\n    \"email\" : \"\",\n    \"password\" : \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_users_signup_nopassword",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d133e99-afdc-4be6-8513-e3b3c8ee9784",
								"exec": [
									" pm.test(\"Signup no password\", function() {",
									"    pm.response.to.have.status(400);",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"name\",\n    \"email\" : \"email@emial.com\",\n    \"password\" : \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_users_login_ko",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f075aeb-6d6a-4020-891d-eca3eb8375a1",
								"exec": [
									"pm.test(\"Users login ko status\", function() {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\" : \"{{email}}\",\n    \"password\" : \"wrongpassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_users_login_noemail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d133e99-afdc-4be6-8513-e3b3c8ee9784",
								"exec": [
									" pm.test(\"Login no name\", function() {",
									"    pm.response.to.have.status(400);",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\" : \"\",\n    \"password\" : \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_users_login_nopassword",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d133e99-afdc-4be6-8513-e3b3c8ee9784",
								"exec": [
									" pm.test(\"Login no password\", function() {",
									"    pm.response.to.have.status(400);",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\" : \"email@emial.com\",\n    \"password\" : \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_users_get_by_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "623fa61e-3c3a-4d38-a8cc-a91a9fcf308b",
								"exec": [
									"pm.test(\"Users get ok status\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Users get ok data\", function() {",
									"",
									"    const responseJson = pm.response.json();",
									"    const user = pm.environment.get('user');",
									"",
									"    pm.expect(responseJson.name).to.eql(user.name);",
									"    pm.expect(responseJson._id).to.eql(user._id);",
									"    pm.expect(responseJson.email).to.eql(user.email);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "01b197dc-e2eb-4611-8a58-233114258b5c",
								"exec": [
									"const user = pm.environment.get('user');",
									"",
									"pm.variables.set('_id', user._id);",
									"pm.variables.set('token', user.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/{{_id}}?token={{token}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"{{_id}}"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_users_get_by_no_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "01ee89dc-868f-46af-93ed-36918121816a",
								"exec": [
									"pm.test(\"Users get no id\", function() {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d98644d5-90b0-432b-bed2-600d7188b8ed",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_users_get_by_fakeid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d464009-725e-4459-91a1-dc881be72f76",
								"exec": [
									"pm.test(\"Users get fake id\", function() {",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0be8a57f-d460-46ec-8e19-4a722740f30f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/fakeid?token={{token}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"fakeid"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_users_get_by_id_admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "137f69bb-44b9-4e68-9091-40119ce84848",
								"exec": [
									"pm.test(\"Users get ok admin\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Users get ok admin data\", function() {",
									"",
									"    const responseJson = pm.response.json();",
									"    const user = pm.environment.get('user');",
									"    ",
									"    pm.expect(responseJson.name).to.eql(user.name);",
									"    pm.expect(responseJson._id).to.eql(user._id);",
									"    pm.expect(responseJson.email).to.eql(user.email);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fb263b42-7837-4c30-9ccd-420ffa5443fa",
								"exec": [
									"",
									"const admin = pm.environment.get('admin');",
									"const user = pm.environment.get('user');",
									"",
									"pm.variables.set('_id', user._id);",
									"pm.variables.set('_token', admin.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/{{_id}}?token={{_token}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"{{_id}}"
							],
							"query": [
								{
									"key": "token",
									"value": "{{_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_users_get_by_id_vendor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81ac54f6-8807-4474-aaa1-8923048589ae",
								"exec": [
									"pm.test(\"Users get ko auth\", function() {",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fa58218f-9602-468b-aa4c-a855acb6af91",
								"exec": [
									"",
									"const users = pm.environment.get('users');",
									"",
									"const vendor = pm.environment.get('vendor');",
									"const user = pm.environment.get('user');",
									"",
									"pm.variables.set('_id', user._id);",
									"pm.variables.set('token', vendor.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/{{_id}}?token={{token}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"{{_id}}"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_users_update_name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9804992b-c071-491e-bafe-fbd4c4a36ad5",
								"exec": [
									" pm.test(\"Users update name ok (200)\", function() {",
									"    pm.response.to.have.status(200);",
									" });",
									"",
									"pm.test(\"Users update name ok data\", function() {",
									"",
									"    const responseJson = pm.response.json();",
									"    const user = pm.environment.get('user');",
									"",
									"    pm.expect(responseJson.name).to.eql(pm.environment.get('newName'));",
									"    pm.expect(responseJson.email).to.eql(user.email);",
									"",
									"    user.name = responseJson.name;",
									"    pm.environment.set('user', user);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8a6aaaa0-63a9-4587-baac-9506c192bf9d",
								"exec": [
									"pm.environment.set('newName', 'newName');",
									"",
									"const user = pm.environment.get('user');",
									"",
									"pm.variables.set('_id', user._id);",
									"pm.variables.set('token', user.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"{{newName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/update/{{_id}}?token={{token}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"update",
								"{{_id}}"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_users_update_email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba21a86b-aa3b-4df3-b31d-16c6fda77c7f",
								"exec": [
									" pm.test(\"Users update email ok (200)\", function() {",
									"    pm.response.to.have.status(200);",
									" });",
									"",
									"pm.test(\"Users update email ok data\", function() {",
									"",
									"    const responseJson = pm.response.json();",
									"    const user = pm.environment.get('user');",
									"    ",
									"    pm.expect(responseJson.name).to.eql(user.name);",
									"    pm.expect(responseJson.email).to.eql(pm.environment.get('newEmail'));",
									"",
									"    user.email = responseJson.email;",
									"    pm.environment.set('user', user);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c79c2534-0fa1-4b73-a6c0-14a3ffe153fc",
								"exec": [
									"pm.environment.set('newEmail', 'newEmail');",
									"",
									"const user = pm.environment.get('user');",
									"",
									"pm.variables.set('_id', user._id);",
									"pm.variables.set('token', user.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\" : \"{{newEmail}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/update/{{_id}}?token={{token}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"update",
								"{{_id}}"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_users_update_all",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a808da7d-53b8-4298-95b3-496238b2d930",
								"exec": [
									" pm.test(\"Users update all ok (200)\", function() {",
									"    pm.response.to.have.status(200);",
									" });",
									"",
									"pm.test(\"Users update all ok data\", function() {",
									"",
									"    const responseJson = pm.response.json();",
									"",
									"    pm.expect(responseJson.name).to.eql(pm.environment.get('newName'));",
									"    pm.expect(responseJson.email).to.eql(pm.environment.get('newEmail'));",
									"",
									"    const user = pm.environment.get('user');",
									"    user.name = responseJson.name;",
									"    user.email = responseJson.email;",
									"    pm.environment.set('user', user);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f62a92b7-50c7-4b93-aca6-1f9ba287b78f",
								"exec": [
									"pm.environment.set('newName', 'newName2');",
									"pm.environment.set('newEmail', 'newEmail2');",
									"",
									"const user = pm.environment.get('user');",
									"",
									"pm.variables.set('_id', user._id);",
									"pm.variables.set('token', user.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"{{newName}}\",\n    \"email\" : \"{{newEmail}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/update/{{_id}}?token={{token}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"update",
								"{{_id}}"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_users_update_by_admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4023cfe1-0f57-46c1-a8ea-8f0ac2c6947f",
								"exec": [
									" pm.test(\"Users update name by admin ok (200)\", function() {",
									"    pm.response.to.have.status(200);",
									" });",
									"",
									"pm.test(\"Users update name by admin ok data\", function() {",
									"",
									"    const responseJson = pm.response.json();",
									"    const user = pm.environment.get('user');",
									"",
									"    pm.expect(responseJson.name).to.eql(pm.environment.get('newName'));",
									"    pm.expect(responseJson.email).to.eql(user.email);",
									"",
									"    user.name = responseJson.name;",
									"    pm.environment.set('user', user);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d191e6a1-dd6e-49f1-a6f4-51459d80f09a",
								"exec": [
									"pm.environment.set('newName', 'nameByAdmin');",
									"",
									"const admin = pm.environment.get('admin');",
									"const user = pm.environment.get('user');",
									"",
									"pm.variables.set('_id', user._id);",
									"pm.variables.set('token', admin.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"{{newName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/update/{{_id}}?token={{token}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"update",
								"{{_id}}"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tests_users_update_by_vendor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56b10b75-63c6-41c0-9bd7-866659271cba",
								"exec": [
									" pm.test(\"Users update name by vendor ko\", function() {",
									"    pm.response.to.have.status(401);",
									" });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "462164db-7d97-4b9d-8a78-18b7f16be159",
								"exec": [
									"pm.environment.set('newName', 'nameByVendor');",
									"",
									"const vendor = pm.environment.get('vendor');",
									"const user = pm.environment.get('user');",
									"",
									"pm.variables.set('_id', user._id);",
									"pm.variables.set('token', vendor.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"{{newName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/update/{{_id}}?token={{token}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"update",
								"{{_id}}"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}